{"componentChunkName":"component---src-templates-blog-post-js","path":"/online-editor/","result":{"data":{"site":{"siteMetadata":{"title":"按太阳穴轮刮眼眶"}},"markdownRemark":{"id":"30b2715f-aa77-5298-97be-8587fe5d1c54","excerpt":"在线编辑器根据其侧重点和实现方式的不同, 可大致分为富文本编辑器和代码编辑器两类, 本文对这两类编辑器的实现方式进行最基本的解读和分析. 富文本编辑器 基本实现原理 富文本编辑器的实现原理很简单, 其编辑区域一般使用一个  的  元素来实现. 当 HTML…","html":"<p>在线编辑器根据其侧重点和实现方式的不同, 可大致分为富文本编辑器和代码编辑器两类, 本文对这两类编辑器的实现方式进行最基本的解读和分析.</p>\n<h1>富文本编辑器</h1>\n<h2>基本实现原理</h2>\n<p>富文本编辑器的实现原理很简单, 其编辑区域一般使用一个 <code class=\"language-text\">contentedtable=&quot;true&quot;</code> 的 <code class=\"language-text\">div</code> 元素来实现. 当 HTML 元素的 <code class=\"language-text\">contenteditable</code> 属性设为 <code class=\"language-text\">true</code> 后, 该元素的内容变为可编辑状态:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">contenteditable</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>这是一个可编辑元素<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>此时即可修改元素的内容, 当点击回车键后, 会自动生成一个 <code class=\"language-text\">p</code> 或 <code class=\"language-text\">div</code> 元素.\n可设置 <code class=\"language-text\">outline: none</code> 以去掉默认的聚焦态边框.</p>\n<h2>修改样式与内容</h2>\n<p>此时即可修改元素的内容, 当点击回车键后, 会自动生成一个 <code class=\"language-text\">p</code> 或 <code class=\"language-text\">div</code> 元素.</p>\n<p>可设置 <code class=\"language-text\">outline: none</code> 以去掉默认的聚焦态边框.文本样式的修改主要通过调用 <code class=\"language-text\">document.execCommand()</code> 方法来实现, 此方法会影响当前处于活动状态的可编辑元素. 此方法接收三个输入参数:</p>\n<ul>\n<li>命令名称[string], 如 fontsize、backcolor、undo 等, 详见 MDN 相关参考.</li>\n<li>是否展开用户界面[boolean], 一般传入 false 即可.</li>\n<li>命令参数[可选], 如 fontSize 传入字体尺寸、backColor 传入 color 类型的 string 等, 默认为 null.</li>\n<li>返回值: boolean, 返回 false 表示命令不被支持或未启用.</li>\n</ul>\n<p>示例:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 将当前行设为“Heading2”, 添加“h2”标签</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">execCommand</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"formatblock\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"h2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 在插入点或选中文字部分修改字体、字号</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">execCommand</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fontname\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Times New Roman\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">execCommand</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fontsize\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 撤销上一次修改</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">execCommand</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"undo\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token operator\">-</span> 是否展开用户界面<span class=\"token punctuation\">[</span>boolean<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> 一般传入<span class=\"token boolean\">false</span>即可<span class=\"token punctuation\">.</span></code></pre></div>\n<h2>浏览器实现差异</h2>\n<p>可编辑元素在不同浏览器及其版本之间可能存在一些差异, 如按下回车键后, IE/Opera 会添加一个 <code class=\"language-text\">p</code> 标签元素, 旧版本的 Firefox 会添加 <code class=\"language-text\">br</code> 元素, 而 Chrome/Safari 会添加 <code class=\"language-text\">div</code> 元素. 通过调用 <code class=\"language-text\">document.execCommand(&quot;defaultParagraphSeparator&quot;, false, &quot;div&quot;)</code> 可显式指定创建新段落的方式, 此方法也支持使用自定义标签, 如语雀的编辑器就使用了以 <code class=\"language-text\">ne</code> 开头的一系列自定义标签.</p>\n<p>文末提供了 MDN 中展示的一个最基本的原生富文本编辑器 Demo.</p>\n<hr>\n<h1>代码编辑器</h1>\n<p>富文本编辑器受到原生 HTML 和 DOM 技术的友好支持, 其编辑区生成的就是一组的 HTML 元素, 通过自定义标签、添加自定义样式表等方式来定制主题样式即可.</p>\n<p>相较于富文本编辑器, 代码编辑器则要复杂得多. 代码编辑器的核心是通过对代码文本的词法、语法和语义分析, 将内容划分为关键字、变量名、字面量、函数体等元素, 并为每类元素添加不同的 CSS class, 同时插入一些带边框的空格元素来实现代码的缩进和格式化等.</p>\n<h2>monaco-editor</h2>\n<p><code class=\"language-text\">monaco-editor</code> 是 VSCode 中分离出的编辑器模块, 也是目前最典型、应用最为广泛的前端代码编辑器之一, 本文以 <code class=\"language-text\">monaco-editor</code> 为例分析代码编辑器的实现方式.</p>\n<p><code class=\"language-text\">monaco-editor</code> 的编辑器区域使用了绝对定位、完全重叠的两层 <code class=\"language-text\">div</code> 区域与一个 1px 宽度的 <code class=\"language-text\">textarea</code> 元素构成:</p>\n<ul>\n<li>第一层 div 主要负责背景样式的渲染, 其内部由绝对定位、固定高度的 div 代码行构成, 每个代码行内包含若干个绝对定位的 div 块, 用于展示缩进线、当前聚焦行边框、文字选中态高亮、警告和错误信息的下划波浪线等样式信息. 这一层的所有 div 都没有文本元素.</li>\n<li>第二层 div 用于渲染代码文本, 内部的 div 代码行与第一层完全重叠, 每个代码行内由若干 span 标签包裹的文本元素(一个单词、一个标点符号、一段连续空格等)构成. 对代码进行语义分析后为每个 span 元素赋予不同的 class , 从而实现代码高亮.</li>\n<li>输入光标为一个绝对定位、宽度为 1px、内容为空的 textarea , 当使用鼠标或触控板单击编辑器区域、或使用方向键和其他快捷键改变输入光标位置后, 需要计算出正确的文本编辑位置并更新 textarea 元素的位置.</li>\n</ul>\n<hr>\n<h1>结语</h1>\n<p>本文对富文本编辑器和代码编辑器的实现方式进行了最基本最浅显的分析, 相较于代码编辑器而言, 富文本编辑器应用更广、更贴近前端.</p>\n<p>作为学习者, 可以扒一扒市面上比较有名的在线富文本编辑器(如语雀、幕布、Notion、EverNote 等), 发挥自己的创意, 做一个自己心目中更易用、更美观、更极客的富文本编辑器吧!</p>\n<hr>\n<p>附:</p>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/Guide/HTML/Editable_content/Rich-Text_Editing_in_Mozilla#%E7%A4%BA%E4%BE%8B%EF%BC%9A%E4%B8%80%E4%B8%AA%E7%AE%80%E6%98%93%E4%BD%86%E5%AE%8C%E6%95%B4%E7%9A%84%E5%AF%8C%E6%96%87%E6%9C%AC%E7%BC%96%E8%BE%91%E5%99%A8\">MDN - 一个简易但完整的富文本编辑器实现</a></p>\n<p><a href=\"https://github.com/Microsoft/monaco-editor\">Monaco Editor - Github Pages</a></p>\n<p><a href=\"https://prosemirror.net/\">ProseMirror - 一个开源的支持 Markdown、WYSIWYG 的富文本编辑器 Toolkit</a></p>","frontmatter":{"title":"在线编辑器实现浅析","date":"July 10, 2021","description":"对富文本编辑器与代码编辑器的实现方式进行最基本的解读和分析."}},"previous":{"fields":{"slug":"/clean-architecture/"},"frontmatter":{"title":"Clean Architecture"}},"next":{"fields":{"slug":"/react/"},"frontmatter":{"title":"React核心原理浅析"}}},"pageContext":{"id":"30b2715f-aa77-5298-97be-8587fe5d1c54","previousPostId":"74e32349-2480-5d36-aa8e-7f80dc4f541a","nextPostId":"d825e2a6-c130-5b73-b187-efe1310eb54d"}},"staticQueryHashes":["2841359383","3257411868"]}