{"componentChunkName":"component---src-templates-blog-post-js","path":"/html-pickup/","result":{"data":{"site":{"siteMetadata":{"title":"按太阳穴轮刮眼眶"}},"markdownRemark":{"id":"ef71ee56-83e0-5b94-a891-f6d4118c0f7f","excerpt":"使用 meta 标签实现自动刷新/跳转 使用 meta 标签进行 SEO 使用 title 标签实现通知提醒功能 通过 script 标签优化 JS 文件的请求/执行时机 通过 link 标签进行预加载来加快渲染 开放图表协议(OGP) 使用 meta 标签实现自动刷新/跳转 当 meta 标签的 http-equiv…","html":"<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%E4%BD%BF%E7%94%A8-meta-%E6%A0%87%E7%AD%BE%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E5%88%B7%E6%96%B0%E8%B7%B3%E8%BD%AC\">使用 meta 标签实现自动刷新/跳转</a></li>\n<li><a href=\"#%E4%BD%BF%E7%94%A8-meta-%E6%A0%87%E7%AD%BE%E8%BF%9B%E8%A1%8C-seo\">使用 meta 标签进行 SEO</a></li>\n<li><a href=\"#%E4%BD%BF%E7%94%A8-title-%E6%A0%87%E7%AD%BE%E5%AE%9E%E7%8E%B0%E9%80%9A%E7%9F%A5%E6%8F%90%E9%86%92%E5%8A%9F%E8%83%BD\">使用 title 标签实现通知提醒功能</a></li>\n<li><a href=\"#%E9%80%9A%E8%BF%87-script-%E6%A0%87%E7%AD%BE%E4%BC%98%E5%8C%96-js-%E6%96%87%E4%BB%B6%E7%9A%84%E8%AF%B7%E6%B1%82%E6%89%A7%E8%A1%8C%E6%97%B6%E6%9C%BA\">通过 script 标签优化 JS 文件的请求/执行时机</a></li>\n<li><a href=\"#%E9%80%9A%E8%BF%87-link-%E6%A0%87%E7%AD%BE%E8%BF%9B%E8%A1%8C%E9%A2%84%E5%8A%A0%E8%BD%BD%E6%9D%A5%E5%8A%A0%E5%BF%AB%E6%B8%B2%E6%9F%93\">通过 link 标签进行预加载来加快渲染</a></li>\n<li><a href=\"#%E5%BC%80%E6%94%BE%E5%9B%BE%E8%A1%A8%E5%8D%8F%E8%AE%AEogp\">开放图表协议(OGP)</a></li>\n</ul>\n</div>\n<h2 id=\"使用-meta-标签实现自动刷新跳转\" style=\"position:relative;\"><a href=\"#%E4%BD%BF%E7%94%A8-meta-%E6%A0%87%E7%AD%BE%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E5%88%B7%E6%96%B0%E8%B7%B3%E8%BD%AC\" aria-label=\"使用 meta 标签实现自动刷新跳转 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用 meta 标签实现自动刷新/跳转</h2>\n<p>当 <code>meta</code> 标签的 <code>http-equiv</code> 属性值为 <code>Refresh</code> 时, 可通过 <code>content</code> 属性实现自动刷新和跳转功能:</p>\n<ul>\n<li><code>content</code> 属性为一个正整数 n 时, 表示 n 秒后刷新页面;</li>\n<li><code>content</code> 属性为一个正整数 n 加 <code>;url=</code> 且后跟一个合法的 URL 时, 表示 n 秒后跳转到指定 URL.</li>\n</ul>\n<pre><code class=\"language-html\">&#x3C;meta http-equiv=\"Refresh\" content=\"3\" />\n&#x3C;meta http-equiv=\"Refresh\" content=\"5;url=Page2.html\" />\n&#x3C;meta http-equiv=\"Refresh\" content=\"5;url=http://xxx.com\" />\n</code></pre>\n<p>应用场景:</p>\n<ul>\n<li>无法取消的页面跳转, 如当前页面无权限、表单提交完毕跳转到指定页面等;</li>\n<li>类似 PPT 的自动播放效果, 将 URL 指向下一个页面即可.</li>\n</ul>\n<h2 id=\"使用-meta-标签进行-seo\" style=\"position:relative;\"><a href=\"#%E4%BD%BF%E7%94%A8-meta-%E6%A0%87%E7%AD%BE%E8%BF%9B%E8%A1%8C-seo\" aria-label=\"使用 meta 标签进行 seo permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用 meta 标签进行 SEO</h2>\n<p>将 <code>meta</code> 元素的 <code>name</code> 属性值设为 <code>keywords</code> 时, 可在 <code>content</code> 属性中添加逗号分隔的关键词列表: <code>&#x3C;meta name=\"keywords\" content=\"keyword1,keyword2,keyword3\" ></code></p>\n<p>具体关键词可通过 <a href=\"https://trends.google.com/trends/\">GoogleTrends</a> 或 <a href=\"https://data.chinaz.com/keyword/\">站长工具</a> 查询相关关键词的搜索量、搜索特点和竞争度等信息, 以达到更好的 SEO 效果.</p>\n<p>要注意的是, 搜索引擎对于关键词有着自己的权重算法, 对于滥用关键词、堆砌重复关键词的网页可能会进行降低权重的惩罚.</p>\n<h2 id=\"使用-title-标签实现通知提醒功能\" style=\"position:relative;\"><a href=\"#%E4%BD%BF%E7%94%A8-title-%E6%A0%87%E7%AD%BE%E5%AE%9E%E7%8E%B0%E9%80%9A%E7%9F%A5%E6%8F%90%E9%86%92%E5%8A%9F%E8%83%BD\" aria-label=\"使用 title 标签实现通知提醒功能 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用 title 标签实现通知提醒功能</h2>\n<p>注: HTML5 可通过 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Notifications_API\">Notifications API</a> 实现系统级消息提醒.</p>\n<p>在 HTML5 之前, 可通过修改 <code>title</code> 标签内容来实现信息展示、消息提醒等功能:</p>\n<ul>\n<li>通过更新 <code>title</code> 内容来显示下载进度、当前状态、文字滚动等信息;</li>\n<li>\n<p>通过设置定时器周期性地添加删除删除“新消息(1)”这样的文字, 达到消息提醒闪烁的效果:</p>\n<p><img src=\"./notification.gif\" alt=\"notification.gif\"></p>\n</li>\n</ul>\n<h2 id=\"通过-script-标签优化-js-文件的请求执行时机\" style=\"position:relative;\"><a href=\"#%E9%80%9A%E8%BF%87-script-%E6%A0%87%E7%AD%BE%E4%BC%98%E5%8C%96-js-%E6%96%87%E4%BB%B6%E7%9A%84%E8%AF%B7%E6%B1%82%E6%89%A7%E8%A1%8C%E6%97%B6%E6%9C%BA\" aria-label=\"通过 script 标签优化 js 文件的请求执行时机 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>通过 script 标签优化 JS 文件的请求/执行时机</h2>\n<p>默认情况下, 浏览器渲染引擎在解析 HTML 时, 若遇到 <code>script</code> 标签引入脚本文件, 会立即进行一次渲染, 并暂停解析 HTML, 通知网络线程加载脚本文件, 并在加载完毕后执行脚本, 执行完毕后切换回渲染引擎继续渲染页面.</p>\n<p>通过 <code>script</code> 标签的 <code>defer</code> 、 <code>async</code> 和 <code>type</code> 属性可以控制这一过程:</p>\n<ul>\n<li><code>defer</code> 属性表示不阻塞渲染引擎, 异步请求脚本文件, 并在解析完 HTML 后再执行脚本;</li>\n<li><code>async</code> 属性表示先不阻塞渲染引擎, 异步请求脚本文件, 当文件加载完毕后阻塞渲染引擎执行脚本, 在执行完毕后继续解析 HTML;</li>\n<li>\n<p><code>type</code> 属性设为 <code>module</code> 后, 浏览器按照 ES6 标准将文件作为模块解析, 阻塞效果同 <code>defer</code> 属性.</p>\n<ul>\n<li>添加 <code>async</code> 属性可以使模块加载完毕后立即执行.</li>\n</ul>\n</li>\n</ul>\n<p>执行效果如下:\n解析 HTML → 遇到 <code>script</code> 标签 →</p>\n<ul>\n<li><code>&#x3C;script></code> : 暂停解析 HTML → 请求文件 → 执行脚本 → 继续解析 HTML</li>\n<li><code>&#x3C;script defer></code> : 继续解析 HTML 并异步请求文件 → HTML 解析完毕 → 执行脚本</li>\n<li><code>&#x3C;script async></code> : 继续解析 HTML 并异步请求文件 → 文件加载完毕暂停解析 HTML → 执行脚本 → 继续解析 HTML</li>\n<li><code>&#x3C;script type=\"module\"></code> : 默认同 <code>&#x3C;script defer></code>, 添加 <code>async</code> 属性后同 <code>&#x3C;script async></code></li>\n</ul>\n<p>综上, 添加 <code>defer</code> 属性以及 <code>type=\"module\"</code> 能保证渲染引擎优先执行, 让用户更快地看见(可能不完整的)页面.</p>\n<p>同时由于遇到 <code>script</code> 标签引入脚本文件时会立即触发一次渲染, 将 <code>script</code> 元素放在 <code>body</code> 标签底部, 可以在请求脚本文件之前尽可能多的 HTML 渲染出来.</p>\n<h2 id=\"通过-link-标签进行预加载来加快渲染\" style=\"position:relative;\"><a href=\"#%E9%80%9A%E8%BF%87-link-%E6%A0%87%E7%AD%BE%E8%BF%9B%E8%A1%8C%E9%A2%84%E5%8A%A0%E8%BD%BD%E6%9D%A5%E5%8A%A0%E5%BF%AB%E6%B8%B2%E6%9F%93\" aria-label=\"通过 link 标签进行预加载来加快渲染 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>通过 link 标签进行预加载来加快渲染</h2>\n<p>通过设置 <code>link</code> 标签的 <code>rel</code> 属性值, 可以使浏览器触发预处理来提升网页速度:</p>\n<ul>\n<li><code>dns-prefetch</code> : 浏览器会对 <code>href</code> 中的 URL 预先进行 DNS 解析并缓存, 从而在真正需要请求资源时省去 DNS 解析过程, 提升网络请求速度:\n<code>&#x3C;link rel=\"dis-prefetch\" href=\"https://fonts.googleapis.com/\" ></code></li>\n<li><code>preconnect</code> : 浏览器预先进行 DNS 解析、TLS 协商、TCP 握手:\n<code>&#x3C;link rel=\"preconnect\" href=\"http://example.com\" ></code></li>\n<li>\n<p><code>prefetch/preload</code> : 浏览器预先下载并缓存资源, 区别是 <code>prefetch</code> 可能会在浏览器忙时忽略, 而 <code>preload</code> 一定会被预先下载:</p>\n<pre><code class=\"language-html\">&#x3C;link rel=\"preload\" href=\"style.css\" as=\"style\" />\n&#x3C;link rel=\"preload\" href=\"main.js\" as=\"script\" />\n</code></pre>\n</li>\n<li><code>prerender</code> : 浏览器预先加载资源, 并解析执行页面, 进行预渲染:\n<code>&#x3C;link rel=\"prerender\" href=\"Page.html\" ></code></li>\n</ul>\n<h2 id=\"开放图表协议ogp\" style=\"position:relative;\"><a href=\"#%E5%BC%80%E6%94%BE%E5%9B%BE%E8%A1%A8%E5%8D%8F%E8%AE%AEogp\" aria-label=\"开放图表协议ogp permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>开放图表协议(OGP)</h2>\n<p>由 Facebook 公司提出, 通过在分享页面中添加一些 <code>meta</code> 标签和属性, 支持 OGP 协议的社交网站就会在解析页面时生成丰富的预览信息, 如预览图片、站点名称、内容作者等, 具体效果因网站而异.</p>\n<p>目前微信、百度等国内企业对于 OGP 都有着不同程度的支持.</p>\n<pre><code class=\"language-html\">&#x3C;html prefix=\"og: https://ogp.me/ns#\">\n  &#x3C;head>\n    &#x3C;title>The Rock (1996)&#x3C;/title>\n    &#x3C;meta property=\"og:title\" content=\"The Rock\" />\n    &#x3C;meta property=\"og:type\" content=\"video.movie\" />\n    &#x3C;meta property=\"og:url\" content=\"https://www.imdb.com/title/tt0117500/\" />\n    &#x3C;meta\n      property=\"og:image\"\n      content=\"https://ia.media-imdb.com/images/rock.jpg\"\n    />\n    ...\n  &#x3C;/head>\n  ...\n&#x3C;/html>\n</code></pre>\n<p>详情参考 <a href=\"https://ogp.me/\">ogp.me</a>.</p>","frontmatter":{"title":"HTML拾遗","date":"September 01, 2021","description":"一些“不可见”但很有用的HTML标签用法"}},"previous":{"fields":{"slug":"/http-3/"},"frontmatter":{"title":"HTTP之三：安全的HTTPS"}},"next":{"fields":{"slug":"/es6+/"},"frontmatter":{"title":"ES6+新特性扫盲"}}},"pageContext":{"id":"ef71ee56-83e0-5b94-a891-f6d4118c0f7f","previousPostId":"cc5d8afd-d1ac-544d-968c-8e5a2eab50ea","nextPostId":"65ea000a-b635-5aad-a0c8-b0e5d6edf37b"}},"staticQueryHashes":["2841359383","3257411868"]}